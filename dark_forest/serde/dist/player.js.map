{"version":3,"file":"player.js","sourceRoot":"","sources":["../src/player.ts"],"names":[],"mappings":";;;AAEA,uCAAoC;AACpC,yCAAoD;AAMpD;;;;;;;GAOG;AACH,SAAgB,YAAY,CAAC,SAAoB,EAAE,cAA+B;IAChF,OAAO;QACL,OAAO,EAAE,IAAA,iBAAO,EAAC,SAAS,CAAC,MAAM,CAAC;QAClC,aAAa,EAAE,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE;QACjD,YAAY,EAAE,IAAA,iCAAsB,EAAC,SAAS,CAAC,YAAY,CAAC;QAC5D,mBAAmB,EAAE,SAAS,CAAC,mBAAmB,CAAC,QAAQ,EAAE;QAC7D,kBAAkB,EAAE,SAAS,CAAC,mBAAmB,CAAC,QAAQ,EAAE;QAC5D,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE;QACjC,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE;QACzC,cAAc,EAAE,SAAS,CAAC,cAAc,CAAC,QAAQ,EAAE;QACnD,YAAY,EAAE,SAAS,CAAC,YAAY;QACpC,KAAK,EAAE,cAAc,CAAC,KAAK,CAAC,QAAQ,EAAE;QACtC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE;QACpC,KAAK,EAAE,cAAc,CAAC,KAAK;KAC5B,CAAC;AACJ,CAAC;AAfD,oCAeC","sourcesContent":["import type { DarkForest } from '@darkforest_eth/contracts/typechain';\nimport type { Player } from '@darkforest_eth/types';\nimport { address } from './address';\nimport { locationIdFromEthersBN } from './location';\n\nexport type RawPlayer = Awaited<ReturnType<DarkForest['players']>>;\n\nexport type RawArenaPlayer = Awaited<ReturnType<DarkForest['arenaPlayers']>>;\n\n/**\n * Converts the raw typechain result of a call which fetches a\n * `PlayerTypes.Player` struct, and converts it into an object\n * with type `Player` (see @darkforest_eth/types) that can be used by a client.\n *\n * @param rawPlayer result of an ethers.js contract call which returns a raw\n * `PlayerTypes.Player` struct, typed with typechain.\n */\nexport function decodePlayer(rawPlayer: RawPlayer, rawArenaPlayer : RawArenaPlayer): Player {\n  return {\n    address: address(rawPlayer.player),\n    initTimestamp: rawPlayer.initTimestamp.toNumber(),\n    homePlanetId: locationIdFromEthersBN(rawPlayer.homePlanetId),\n    lastRevealTimestamp: rawPlayer.lastRevealTimestamp.toNumber(),\n    lastClaimTimestamp: rawPlayer.lastRevealTimestamp.toNumber(),\n    score: rawPlayer.score.toNumber(),\n    spaceJunk: rawPlayer.spaceJunk.toNumber(),\n    spaceJunkLimit: rawPlayer.spaceJunkLimit.toNumber(),\n    claimedShips: rawPlayer.claimedShips,\n    moves: rawArenaPlayer.moves.toNumber(),\n    team: rawArenaPlayer.team.toNumber(),\n    ready: rawArenaPlayer.ready,\n  };\n}\n"]}