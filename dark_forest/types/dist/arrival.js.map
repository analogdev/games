{"version":3,"file":"arrival.js","sourceRoot":"","sources":["../src/arrival.ts"],"names":[],"mappings":";;;AAyBA;;GAEG;AACU,QAAA,WAAW,GAAG;IACzB,OAAO,EAAE,CAAgB;IACzB,MAAM,EAAE,CAAgB;IACxB,OAAO,EAAE,CAAgB;IACzB,QAAQ,EAAE,CAAgB;CAClB,CAAC","sourcesContent":["import type { ArtifactId, EthAddress, LocationId, VoyageId } from './identifier';\nimport type { Abstract } from './utility';\n\n/**\n * Represents a voyage.\n */\nexport interface QueuedArrival {\n  eventId: VoyageId;\n  player: EthAddress;\n  fromPlanet: LocationId;\n  toPlanet: LocationId;\n  energyArriving: number;\n  silverMoved: number;\n  artifactId?: ArtifactId;\n  departureTime: number;\n  distance: number;\n  arrivalTime: number;\n  arrivalType: ArrivalType;\n}\n\n/**\n * Abstract type representing an arrival type.\n */\nexport type ArrivalType = Abstract<number, 'ArrivalType'>;\n\n/**\n * Enumeration of arrival types.\n */\nexport const ArrivalType = {\n  Unknown: 0 as ArrivalType,\n  Normal: 1 as ArrivalType,\n  Photoid: 2 as ArrivalType,\n  Wormhole: 3 as ArrivalType,\n} as const;\n\n/**\n * Convenience type for storing a voyage and a reference to a timeout that is triggered on voyage\n * arrival (in case the timeout needs to be cancelled).\n */\nexport interface ArrivalWithTimer {\n  /**\n   * TODO: rename to `arrival` or 'voyage'.\n   */\n  arrivalData: QueuedArrival;\n  timer: ReturnType<typeof setTimeout>;\n}\n"]}