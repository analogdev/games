{"version":3,"file":"game_types.js","sourceRoot":"","sources":["../src/game_types.ts"],"names":[],"mappings":";;;AAOA;;GAEG;AACU,QAAA,SAAS,GAAG;IACvB,MAAM,EAAE,CAAc;IACtB,KAAK,EAAE,CAAc;IACrB,UAAU,EAAE,CAAc;IAC1B,UAAU,EAAE,CAAc;CAClB,CAAC;AAEX;;GAEG;AACU,QAAA,cAAc,GAAG;IAC5B,CAAC,iBAAS,CAAC,MAAM,CAAC,EAAE,QAAQ;IAC5B,CAAC,iBAAS,CAAC,KAAK,CAAC,EAAE,OAAO;IAC1B,CAAC,iBAAS,CAAC,UAAU,CAAC,EAAE,YAAY;IACpC,CAAC,iBAAS,CAAC,UAAU,CAAC,EAAE,YAAY;CAC5B,CAAC;AAOX;;GAEG;AACU,QAAA,KAAK,GAAG;IACnB,OAAO,EAAE,CAAU;IACnB,KAAK,EAAE,CAAU;IACjB,MAAM,EAAE,CAAU;IAClB,SAAS,EAAE,CAAU;IACrB,MAAM,EAAE,CAAU;IAClB,KAAK,EAAE,CAAU;IACjB,MAAM,EAAE,CAAU;IAClB,GAAG,EAAE,CAAU;IACf,SAAS,EAAE,CAAU;IACrB,IAAI,EAAE,CAAU;IAChB,SAAS,EAAE,EAAW;IACtB,+EAA+E;CACvE,CAAC;AAEX;;GAEG;AACU,QAAA,UAAU,GAAG;IACxB,CAAC,aAAK,CAAC,OAAO,CAAC,EAAE,SAAS;IAC1B,CAAC,aAAK,CAAC,KAAK,CAAC,EAAE,OAAO;IACtB,CAAC,aAAK,CAAC,MAAM,CAAC,EAAE,QAAQ;IACxB,CAAC,aAAK,CAAC,SAAS,CAAC,EAAE,WAAW;IAC9B,CAAC,aAAK,CAAC,MAAM,CAAC,EAAE,QAAQ;IACxB,CAAC,aAAK,CAAC,KAAK,CAAC,EAAE,OAAO;IACtB,CAAC,aAAK,CAAC,MAAM,CAAC,EAAE,QAAQ;IACxB,CAAC,aAAK,CAAC,GAAG,CAAC,EAAE,KAAK;IAClB,CAAC,aAAK,CAAC,SAAS,CAAC,EAAE,WAAW;IAC9B,CAAC,aAAK,CAAC,IAAI,CAAC,EAAE,MAAM;IACpB,CAAC,aAAK,CAAC,SAAS,CAAC,EAAE,WAAW;CACtB,CAAC","sourcesContent":["import type { Abstract } from './utility';\n\n/**\n * Abstract type representing a type of space.\n */\nexport type SpaceType = Abstract<number, 'SpaceType'>;\n\n/**\n * Enumeration of the types of space in the game. NEBULA = 0, DEAD_SPACE = 3\n */\nexport const SpaceType = {\n  NEBULA: 0 as SpaceType,\n  SPACE: 1 as SpaceType,\n  DEEP_SPACE: 2 as SpaceType,\n  DEAD_SPACE: 3 as SpaceType,\n} as const;\n\n/**\n * Mapping from SpaceType to pretty-printed names.\n */\nexport const SpaceTypeNames = {\n  [SpaceType.NEBULA]: 'Nebula',\n  [SpaceType.SPACE]: 'Space',\n  [SpaceType.DEEP_SPACE]: 'Deep Space',\n  [SpaceType.DEAD_SPACE]: 'Dead Space',\n} as const;\n\n/**\n * Abstract type representing a biome.\n */\nexport type Biome = Abstract<number, 'Biome'>;\n\n/**\n * Enumeration of the biomes in the game. OCEAN = 1, CORRUPTED = 10\n */\nexport const Biome = {\n  UNKNOWN: 0 as Biome,\n  OCEAN: 1 as Biome,\n  FOREST: 2 as Biome,\n  GRASSLAND: 3 as Biome,\n  TUNDRA: 4 as Biome,\n  SWAMP: 5 as Biome,\n  DESERT: 6 as Biome,\n  ICE: 7 as Biome,\n  WASTELAND: 8 as Biome,\n  LAVA: 9 as Biome,\n  CORRUPTED: 10 as Biome,\n  // Don't forget to update MIN_BIOME and/or MAX_BIOME in the `constants` package\n} as const;\n\n/**\n * Mapping from Biome to pretty-printed names.\n */\nexport const BiomeNames = {\n  [Biome.UNKNOWN]: 'Unknown',\n  [Biome.OCEAN]: 'Ocean',\n  [Biome.FOREST]: 'Forest',\n  [Biome.GRASSLAND]: 'Grassland',\n  [Biome.TUNDRA]: 'Tundra',\n  [Biome.SWAMP]: 'Swamp',\n  [Biome.DESERT]: 'Desert',\n  [Biome.ICE]: 'Ice',\n  [Biome.WASTELAND]: 'Wasteland',\n  [Biome.LAVA]: 'Lava',\n  [Biome.CORRUPTED]: 'Corrupted',\n} as const;\n"]}