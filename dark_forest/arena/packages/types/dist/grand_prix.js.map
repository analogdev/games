{"version":3,"file":"grand_prix.js","sourceRoot":"","sources":["../src/grand_prix.ts"],"names":[],"mappings":"","sourcesContent":["import { BigNumber } from \"ethers\";\nimport { BadgeType } from \"./badges\";\nimport { BadgeSet } from \"./graph_types\";\nimport { EthAddress } from \"./identifier\";\n\n export interface SeasonHistory {\n  seasonId: number;\n  rank: number;\n  score: number;\n  players: number;\n  grandPrixs: GrandPrixHistory[];\n}\n\nexport interface GrandPrixHistory {\n  configHash: string;\n  rank: number;\n  score: number;\n  players: number;\n  badges: ConfigBadge[];\n}\n\nexport interface CleanConfigPlayer {\n  id: string;\n  address: string;\n  duration: number;\n  moves: number;\n  startTime: number;\n  endTime: number;\n  badges: ConfigBadge[];\n  configHash: string;\n  gamesStarted: number;\n  gamesFinished: number;\n  score: number;\n}\n\nexport interface ConfigBadge {\n  configHash: string;\n  type: BadgeType;\n}\n\nexport interface SeasonBadge {\n  // Where badge was won\n  configHash: string;\n  badge: BadgeType;\n  // If it counts for score\n  scoringConfigHash: string\n}\n\nexport interface UniquePlayerBadges {\n  [type: BadgeType]: ConfigBadge;\n}\n\n\nexport interface SeasonPlayers {\n  [address: string]: CleanConfigPlayer[];\n}\n\nexport interface GrandPrixPlayers {\n  [configHash: string]: CleanConfigPlayer[];\n}\n\nexport interface SeasonScore {\n  player: string;\n  score: number;\n  grandPrixsFinished: number;\n}\n\nexport interface Wallbreaker {\n  configHash: string;\n  player: string;\n  duration: number;\n  arenaAddress: string;\n}\n\nexport interface GrandPrixResult {\n  bestTime: number;\n  moves: number;\n  badges: BadgeSet;\n}\n\nexport interface GrandPrixMetadata {\n  seasonId: number;\n  configHash: string;\n  startTime: number;\n  endTime: number;\n  parentAddress: EthAddress;\n}\n\nexport interface RegistryResponse {\n  configHash: string;\n  startTime: BigNumber;\n  endTime: BigNumber;\n  parentAddress: string;\n  seasonId: BigNumber;\n}"]}