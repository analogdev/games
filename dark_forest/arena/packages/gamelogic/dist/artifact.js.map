{"version":3,"file":"artifact.js","sourceRoot":"","sources":["../src/artifact.ts"],"names":[],"mappings":"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","sourcesContent":["import { EMPTY_ADDRESS, MAX_SPACESHIP_TYPE, MIN_SPACESHIP_TYPE } from '@darkforest_eth/constants';\nimport { hashToInt } from '@darkforest_eth/serde';\nimport {\n  Abstract,\n  Artifact,\n  ArtifactId,\n  ArtifactRarity,\n  ArtifactRarityNames,\n  ArtifactType,\n  ArtifactTypeNames,\n  Biome,\n  BiomeNames,\n  EthAddress,\n  Planet,\n  PlanetLevel,\n  PlanetType,\n  RenderedArtifact,\n} from '@darkforest_eth/types';\n\nexport const RelicsList: ArtifactType[] = [\n  ArtifactType.Wormhole,\n  ArtifactType.PlanetaryShield,\n  ArtifactType.PhotoidCannon,\n  ArtifactType.BloomFilter,\n  ArtifactType.BlackDomain,\n];\n\n// relics are the forgotten technologies / the artifacts that you can talk to\nexport function isRelic(type: ArtifactType): boolean {\n  return ArtifactType.Wormhole <= type && type <= ArtifactType.BlackDomain;\n}\n\nexport function isBasic(type: ArtifactType): boolean {\n  return ArtifactType.Monolith <= type && type <= ArtifactType.Pyramid;\n}\n\nexport function isSpaceShip(type: ArtifactType | undefined): boolean {\n  return type !== undefined && type >= MIN_SPACESHIP_TYPE && type <= MAX_SPACESHIP_TYPE;\n}\n\nexport function hasStatBoost(type: ArtifactType | undefined): boolean {\n  return (\n    !isSpaceShip(type) &&\n    type !== ArtifactType.BlackDomain &&\n    type !== ArtifactType.BloomFilter &&\n    type !== ArtifactType.Wormhole\n  );\n}\n\nconst artifactCooldownHoursMap = {\n  [ArtifactType.Unknown]: 24,\n  [ArtifactType.Monolith]: 0,\n  [ArtifactType.Colossus]: 0,\n  [ArtifactType.Spaceship]: 0,\n  [ArtifactType.Pyramid]: 0,\n  [ArtifactType.Wormhole]: 4,\n  [ArtifactType.PlanetaryShield]: 4,\n  [ArtifactType.PhotoidCannon]: 24,\n  [ArtifactType.BloomFilter]: 24,\n  [ArtifactType.BlackDomain]: 24,\n} as const;\n\nconst artifactIsAncientMap: Map<ArtifactId, boolean> = new Map();\n\nexport function durationUntilArtifactAvailable(artifact: Artifact) {\n  return artifactAvailableTimestamp(artifact) - Date.now();\n}\n\nexport function artifactAvailableTimestamp(artifact: Artifact) {\n  if (artifact.lastDeactivated === 0) {\n    return Date.now();\n  }\n\n  const availableAtTimestampMs =\n    artifact.lastDeactivated * 1000 +\n    artifactCooldownHoursMap[artifact.artifactType] * 60 * 60 * 1000;\n\n  return availableAtTimestampMs;\n}\n\nexport function isActivated(artifact: Artifact | undefined) {\n  if (artifact === undefined) {\n    return false;\n  }\n\n  return artifact.lastActivated > artifact.lastDeactivated;\n}\n\nexport function getActivatedArtifact(artifacts: Artifact[]): Artifact | undefined {\n  return artifacts.find(isActivated);\n}\n\nexport function getArtifactDebugName(a?: Artifact): string {\n  if (!a) {\n    return 'unknown artifact';\n  }\n\n  return a.id.substring(0, 8);\n}\n\nexport const biomeName = (biome: Biome): string => BiomeNames[biome];\n\nexport const rarityName = (rarity: ArtifactRarity): string => ArtifactRarityNames[rarity];\n\nexport const rarityNameFromArtifact = (a: Artifact): string => rarityName(a.rarity);\n\nexport function artifactBiomeName(artifact: Artifact): string {\n  if (isAncient(artifact)) return 'Ancient';\n  return biomeName(artifact.planetBiome);\n}\n\nexport const levelFromRarity = (rarity: ArtifactRarity): PlanetLevel => {\n  if (rarity === ArtifactRarity.Mythic) return PlanetLevel.NINE;\n  else if (rarity === ArtifactRarity.Legendary) return PlanetLevel.SEVEN;\n  else if (rarity === ArtifactRarity.Epic) return PlanetLevel.FIVE;\n  else if (rarity === ArtifactRarity.Rare) return PlanetLevel.THREE;\n  else return PlanetLevel.ONE;\n};\n\nconst artifactFileNamesById: Map<ArtifactId, string> = new Map();\n\nexport type ArtifactFileColor = Abstract<number, 'ArtifactFileColor'>;\nexport const ArtifactFileColor = {\n  BLUE: 0 as ArtifactFileColor,\n  APP_BACKGROUND: 1 as ArtifactFileColor,\n};\n\nlet forceAncient: boolean | undefined = undefined;\n\nexport function artifactRoll(id: ArtifactId): number {\n  return hashToInt(id) % 256;\n}\n\nexport function isAncient(artifact: RenderedArtifact): boolean {\n  if (forceAncient !== undefined) return forceAncient;\n\n  if (isSpaceShip(artifact.artifactType)) return false;\n\n  const { id, planetBiome: biome } = artifact;\n\n  if (artifactIsAncientMap.has(id)) {\n    return artifactIsAncientMap.get(id) || false;\n  }\n\n  let ancient = false;\n  const roll = artifactRoll(id);\n\n  if (biome === Biome.CORRUPTED) ancient = roll % 2 === 0;\n  else ancient = roll % 16 === 0;\n\n  artifactIsAncientMap.set(id, ancient);\n\n  return ancient;\n}\n\nexport function setForceAncient(force: boolean): void {\n  forceAncient = force;\n}\n\nexport function artifactFileName(\n  videoMode: boolean,\n  thumb: boolean,\n  artifact: RenderedArtifact,\n  color: ArtifactFileColor,\n  // used in GifRenderer.ts to generate filenames from mock artifacts\n  debugProps: { forceAncient: boolean; skipCaching: boolean } | undefined = undefined\n): string {\n  const { artifactType: type, rarity, planetBiome: biome, id } = artifact;\n\n  if (isSpaceShip(type)) {\n    switch (type) {\n      case ArtifactType.ShipWhale:\n        return '64-whale.png';\n      case ArtifactType.ShipMothership:\n        return '64-mothership.png';\n      case ArtifactType.ShipCrescent:\n        return '64-crescent.png';\n      case ArtifactType.ShipGear:\n        return '64-gear.png';\n      case ArtifactType.ShipTitan:\n        return '64-titan.png';\n    }\n  }\n\n  const size = thumb ? '16' : '64';\n  const ext = videoMode ? 'webm' : 'png';\n\n  let fileName = '';\n\n  if (!debugProps?.skipCaching && artifactFileNamesById.has(id)) {\n    fileName = artifactFileNamesById.get(id) || '';\n  } else {\n    const typeStr = ArtifactTypeNames[type];\n    const rarityStr = ArtifactRarityNames[rarity];\n    let nameStr = '';\n    if (debugProps) {\n      if (debugProps.forceAncient) {\n        nameStr = 'ancient';\n      } else {\n        nameStr = biome + BiomeNames[biome];\n      }\n    } else {\n      if (isAncient(artifact)) {\n        nameStr = 'ancient';\n      } else {\n        nameStr = biome + BiomeNames[biome];\n      }\n    }\n    fileName = `${typeStr}-${rarityStr}-${nameStr}`;\n  }\n\n  if (!debugProps?.skipCaching) artifactFileNamesById.set(id, fileName);\n\n  let colorStr = '';\n  if (color === ArtifactFileColor.APP_BACKGROUND) colorStr = '-bg';\n\n  return `${size}-${fileName}${colorStr}.${ext}`;\n}\n\nexport function getActiveBlackDomain(artifacts: Artifact[]): Artifact | undefined {\n  for (const artifact of artifacts) {\n    if (artifact.artifactType === ArtifactType.BlackDomain && isActivated(artifact))\n      return artifact;\n  }\n  return undefined;\n}\n\nexport const dateMintedAt = (artifact: Artifact | undefined): string => {\n  if (!artifact) return '00/00/0000';\n  return new Date(artifact.mintedAtTimestamp * 1000).toDateString();\n};\n\nexport function canActivateArtifact(\n  artifact: Artifact,\n  planet: Planet | undefined,\n  artifactsOnPlanet: Artifact[]\n) {\n  if (isSpaceShip(artifact.artifactType)) {\n    return (\n      planet &&\n      planet.owner === EMPTY_ADDRESS &&\n      artifact.artifactType === ArtifactType.ShipCrescent &&\n      artifact.activations === 0\n    );\n  }\n\n  const available = artifactAvailableTimestamp(artifact);\n  if (available !== undefined) {\n    const now = Date.now();\n    const anyArtifactActive = artifactsOnPlanet.some((a) => isActivated(a));\n    const waitUntilAvailable = available - now;\n    const availableToActivate =\n      waitUntilAvailable <= -0 &&\n      !anyArtifactActive &&\n      planet?.locationId === artifact.onPlanetId &&\n      !!artifact.onPlanetId;\n    return availableToActivate;\n  }\n\n  return false;\n}\n\nexport function canWithdrawArtifact(account: EthAddress, artifact: Artifact, planet?: Planet) {\n  return (\n    planet &&\n    !planet.destroyed &&\n    planet.owner === account &&\n    planet.planetType === PlanetType.TRADING_POST &&\n    !isActivated(artifact) &&\n    !isSpaceShip(artifact.artifactType)\n  );\n}\n\nexport function canDepositArtifact(account: EthAddress, artifact: Artifact, planet?: Planet) {\n  return (\n    planet &&\n    !planet.destroyed &&\n    planet.owner === account &&\n    !artifact.onPlanetId &&\n    planet.planetType === PlanetType.TRADING_POST\n  );\n}\n\nexport function getPlayerControlledSpaceships(\n  artifacts: (Artifact | undefined)[] | undefined,\n  owner: EthAddress | undefined\n) {\n  if (!owner) return [];\n  return (artifacts || []).filter((a) => a?.controller === owner);\n}\n"]}