{"version":3,"file":"xDaiApi.js","sourceRoot":"","sources":["../src/xDaiApi.ts"],"names":[],"mappings":";;;AAAA,yDAImC;AAGnC;;;GAGG;AACI,KAAK,UAAU,gBAAgB;IACpC,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,yBAAa,EAAE;YACrC,MAAM,EAAE,KAAK;SACd,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAc,CAAC;QAC/C,cAAc,CAAC,MAAM,CAAC,CAAC;QACvB,OAAO,MAAM,CAAC;KACf;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,8BAAkB,CAAC;KAC3B;AACH,CAAC;AAZD,4CAYC;AAED;;GAEG;AACH,SAAS,cAAc,CAAC,SAAoB;IAC1C,IAAI,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;QACtC,SAAS,CAAC,IAAI,GAAG,8BAAkB,CAAC,IAAI,CAAC;KAC1C;IAED,IAAI,OAAO,SAAS,CAAC,OAAO,KAAK,QAAQ,EAAE;QACzC,SAAS,CAAC,OAAO,GAAG,8BAAkB,CAAC,OAAO,CAAC;KAChD;IAED,IAAI,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,EAAE;QACtC,SAAS,CAAC,IAAI,GAAG,8BAAkB,CAAC,IAAI,CAAC;KAC1C;IAED,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,mCAAuB,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChF,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,mCAAuB,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACtF,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,mCAAuB,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAClF,CAAC","sourcesContent":["import {\n  DEFAULT_GAS_PRICES,\n  GAS_PRICE_API,\n  MAX_AUTO_GAS_PRICE_GWEI,\n} from '@darkforest_eth/constants';\nimport { GasPrices } from '@darkforest_eth/types';\n\n/**\n * Gets the current gas prices from xDai's price oracle. If the oracle is broken, return some sane\n * defaults.\n */\nexport async function getAutoGasPrices(): Promise<GasPrices> {\n  try {\n    const res = await fetch(GAS_PRICE_API, {\n      method: 'GET',\n    });\n\n    const prices = (await res.json()) as GasPrices;\n    cleanGasPrices(prices);\n    return prices;\n  } catch (e) {\n    return DEFAULT_GAS_PRICES;\n  }\n}\n\n/**\n * In case xDai gives us a malformed response, clean it up with some default gas prices.\n */\nfunction cleanGasPrices(gasPrices: GasPrices): void {\n  if (typeof gasPrices.fast !== 'number') {\n    gasPrices.fast = DEFAULT_GAS_PRICES.fast;\n  }\n\n  if (typeof gasPrices.average !== 'number') {\n    gasPrices.average = DEFAULT_GAS_PRICES.average;\n  }\n\n  if (typeof gasPrices.slow !== 'number') {\n    gasPrices.slow = DEFAULT_GAS_PRICES.slow;\n  }\n\n  gasPrices.fast = Math.max(1, Math.min(MAX_AUTO_GAS_PRICE_GWEI, gasPrices.fast));\n  gasPrices.average = Math.max(1, Math.min(MAX_AUTO_GAS_PRICE_GWEI, gasPrices.average));\n  gasPrices.slow = Math.max(1, Math.min(MAX_AUTO_GAS_PRICE_GWEI, gasPrices.slow));\n}\n"]}