{"version":3,"file":"ProcgenUtils.js","sourceRoot":"","sources":["../src/ProcgenUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  EMPTY_ADDRESS,\n  HAT_SIZES,\n  MAX_PLANET_LEVEL,\n  MIN_PLANET_LEVEL,\n} from '@darkforest_eth/constants';\nimport { getPlanetRank, isLocatable } from '@darkforest_eth/gamelogic';\nimport { seededRandom } from '@darkforest_eth/hashing';\nimport { hashToInt } from '@darkforest_eth/serde';\nimport {\n  ArtifactId,\n  Biome,\n  EthAddress,\n  HatType,\n  HSLVec,\n  LocationId,\n  Planet,\n  PlanetCosmeticInfo,\n  Player,\n  RGBAVec,\n  RGBVec,\n  RuinsInfo,\n  UpgradeBranchName,\n} from '@darkforest_eth/types';\nimport Noise from './Noise';\nimport {\n  blurb2grammar,\n  blurbGrammar,\n  planetNameWords,\n  planetTagAdj,\n  planetTagNoun,\n} from './ProcgenConsts';\nimport tracery from './tracery';\nimport { baseEngModifiers } from './tracery-modifiers';\n\nexport type PixelCoords = {\n  x: number;\n  y: number;\n};\n\nexport type QuoteData = {\n  quote: string;\n  author: string;\n};\n\nexport const titleCase = (title: string): string =>\n  title\n    .split(/ /g)\n    .map((word, i) => {\n      // don't capitalize articles unless it's the first word\n      if (i !== 0 && ['of', 'the'].includes(word)) return word;\n      return `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`;\n    })\n    .join(' ');\n\nconst blurbsById = new Map<LocationId, string>();\nconst blurbs2ById = new Map<LocationId, string>();\nconst cosmeticByLocId = new Map<LocationId, PlanetCosmeticInfo>();\nconst baseByBiome: { readonly [Biome: number]: HSLVec } = {\n  [Biome.UNKNOWN]: [0, 0, 0],\n  [Biome.OCEAN]: [213, 100, 50],\n  [Biome.FOREST]: [135, 96, 63],\n  [Biome.GRASSLAND]: [82, 80, 76],\n  [Biome.TUNDRA]: [339, 95, 70],\n  [Biome.SWAMP]: [44, 81, 33],\n  [Biome.DESERT]: [51, 78, 60],\n  [Biome.ICE]: [198, 78, 77],\n  [Biome.WASTELAND]: [0, 0, 18],\n  [Biome.LAVA]: [19, 100, 50],\n  [Biome.CORRUPTED]: [100, 80, 54],\n} as const;\nconst oceanByBiome: { readonly [Biome: number]: HSLVec } = {\n  [Biome.UNKNOWN]: [0, 0, 0],\n  [Biome.OCEAN]: [213, 89, 35],\n  [Biome.FOREST]: [193, 96, 43],\n  [Biome.GRASSLAND]: [185, 78, 70],\n  [Biome.TUNDRA]: [201, 95, 70],\n  [Biome.SWAMP]: [285, 81, 33],\n  [Biome.DESERT]: [27, 78, 60],\n  [Biome.ICE]: [198, 90, 85],\n  [Biome.WASTELAND]: [0, 98, 42],\n  [Biome.LAVA]: [12, 92, 39],\n  [Biome.CORRUPTED]: [128, 90, 63],\n} as const;\n\nconst strByBiome = new Map<Biome, string>();\nexport function getBiomeRgbStr(biome: Biome): string {\n  if (biome === Biome.WASTELAND) return '#888';\n\n  const s = strByBiome.get(biome);\n  if (s) return s;\n\n  const str = rgbStr(hslToRgb(baseByBiome[biome]));\n  strByBiome.set(biome, str);\n\n  return str;\n}\n\nexport const grayColors: PlanetCosmeticInfo = {\n  baseHue: 0,\n  baseStr: '#888',\n  bgStr: '#888',\n  baseColor: [120, 120, 120],\n  baseColor2: [120, 120, 120],\n  baseColor3: [120, 120, 120],\n  mtnColor: [120, 120, 120],\n  mtnColor2: [120, 120, 120],\n  mtnColor3: [120, 120, 120],\n  backgroundColor: [120, 120, 120],\n  previewColor: [120, 120, 120],\n  landRgb: [0, 0, 0],\n  oceanRgb: [0, 0, 0],\n  beachRgb: [0, 0, 0],\n  asteroidHsl: [0, 0, 0],\n  seed: 0,\n  spacetime1: [0, 0, 0],\n  spacetime2: [0, 0, 0],\n  spacetime3: [0, 0, 0],\n  ruins: undefined,\n  // ultra ultra hacky, but we're doing this since it's cached in the renderer\n  hatType: HatType.GraduationCap,\n};\nconst namesById = new Map<LocationId, string>();\nconst configsById = new Map<string, string>();\nconst taglinesById = new Map<LocationId, string>();\nconst huesByHash = new Map<string, number>();\nconst rgbsByHash = new Map<string, RGBAVec>();\n\nexport function hatTypeFromHash(hash: LocationId): HatType {\n  const rand = planetRandomInt(hash);\n  if (rand() % 69 === 0) return HatType.Fish;\n  if (rand() % 16 === 0) return HatType.SantaHat;\n\n  const mod = rand() % 8;\n\n  switch (mod) {\n    case 0:\n      return HatType.GraduationCap;\n    case 1:\n      return HatType.PartyHat;\n    case 2:\n      return HatType.Squid;\n    case 3:\n      return HatType.TopHat;\n    case 4:\n      return HatType.Fez;\n    case 5:\n      return HatType.ChefHat;\n    case 6:\n      return HatType.CowboyHat;\n    case 7:\n      return HatType.PopeHat;\n    default:\n      return HatType.GraduationCap;\n  }\n}\n\nexport function hslStr(h: number, s: number, l: number): string {\n  return `hsl(${h % 360},${s}%,${l}%)`;\n}\n\nexport function rgbStr(rgb: RGBVec): string {\n  const [r, g, b] = rgb;\n  return `rgb(${r}, ${g}, ${b})`;\n}\n\nexport function hslToRgb([h, s, l]: HSLVec): RGBVec {\n  s = Math.max(Math.min(s, 100), 0);\n  l = Math.max(Math.min(l, 100), 0);\n\n  s /= 100;\n  l /= 100;\n\n  const c = (1 - Math.abs(2 * l - 1)) * s,\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n    m = l - c / 2;\n\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  }\n\n  r = Math.round((r + m) * 255);\n  g = Math.round((g + m) * 255);\n  b = Math.round((b + m) * 255);\n\n  return [r, g, b];\n}\n\nexport function hashToHue(hash: string): number {\n  if (huesByHash.has(hash)) {\n    return huesByHash.get(hash) || 0;\n  }\n\n  const baseHue = hashToInt(hash) % 360;\n  huesByHash.set(hash, baseHue);\n\n  return baseHue;\n}\n\nexport function getPlayerColor(player: Player | undefined, teamsEnabled : boolean): string {\n  if(!player || player.address == EMPTY_ADDRESS) return '#996666';\n  const input = teamsEnabled ? (player.team *  9941).toString() : player.address.slice(2)\n  return hslStr(hashToHue(input), 100, 70); // remove 0x\n}\n\nexport function getPlayerColorVec(player: Player | undefined, teamsEnabled: boolean): RGBAVec {\n  if (!player || player.address == EMPTY_ADDRESS) return [153, 153, 102, 255];\n  const value = teamsEnabled ? (player.team *  9941).toString() : player.address.slice(2);\n\n  if (!rgbsByHash.has(value)) {\n    const noAlpha = hslToRgb([hashToHue(value), 100, 70]);\n\n    const withAlpha = [...noAlpha, 1] as RGBAVec;\n    rgbsByHash.set(value, withAlpha);\n  }\n\n  return rgbsByHash.get(value) as RGBAVec;\n}\n\nexport function getPlanetClass(planet: Planet): UpgradeBranchName {\n  const upgrade = planet.upgradeState;\n  let maxIdx = 0;\n  let maxVal = -1;\n  for (let i = 0; i < upgrade.length; i++) {\n    if (upgrade[i] > maxVal) {\n      maxIdx = i;\n      maxVal = upgrade[i];\n    }\n  }\n\n  return maxIdx as UpgradeBranchName;\n}\n\n// returns a deterministic seeded perlin (-1, 1) for a given planet loc\nexport function planetPerlin(loc: LocationId) {\n  const realHash = loc.substring(4, loc.length);\n\n  const noise = Noise.getInstance();\n  const offset = parseInt('0x' + realHash.substring(0, 10));\n  const t = (num: number): number => num / 100 + offset;\n\n  return (coords: PixelCoords) => {\n    const ret = noise.simplex2(t(coords.x), t(coords.y));\n    return ret;\n  };\n}\n\n// returns a deterministic seeded random fn for a given planet loc\n// TODO memoize this guy\nexport function planetRandom(loc: LocationId) {\n  // shouldn't need to clone since loc is primitive but just to be safe\n  const realHash = loc.substring(4, loc.length);\n\n  let count = 0;\n  const countOffset = parseInt('0x' + realHash.substring(0, 10));\n\n  return () => {\n    count++;\n    const ret = seededRandom(count + countOffset);\n    return ret;\n  };\n}\n\nexport function configRandom(config: string) {\n  // shouldn't need to clone since loc is primitive but just to be safe\n  const realHash = config.substring(4, config.length);\n\n  let count = 0;\n  const countOffset = parseInt('0x' + realHash.substring(0, 10));\n\n  return () => {\n    count++;\n    const ret = seededRandom(count + countOffset);\n    return ret;\n  };\n}\n\nexport function planetRandomInt(loc: LocationId) {\n  const rand = planetRandom(loc);\n  return () => Math.floor(rand() * 2 ** 24);\n}\n\nexport function artifactRandom(loc: ArtifactId) {\n  // shouldn't need to clone since loc is primitive but just to be safe\n  const realHash = loc.substring(4, loc.length);\n\n  let count = 0;\n  const countOffset = parseInt('0x' + realHash.substring(0, 10));\n\n  return () => {\n    count++;\n    const ret = seededRandom(count + countOffset);\n    return ret;\n  };\n}\n\nexport function artifactRandomInt(loc: ArtifactId) {\n  const rand = artifactRandom(loc);\n  return () => Math.floor(rand() * 2 ** 24);\n}\n\nexport function getRuinsInfo(loc: LocationId): RuinsInfo {\n  const myInfo: Partial<RuinsInfo> = {};\n\n  const rand = planetRandom(loc);\n  const randInt = planetRandomInt(loc);\n\n  for (let i = MIN_PLANET_LEVEL; i <= MAX_PLANET_LEVEL; i++) {\n    const blooms = (randInt() % 4) + 1;\n    const reflect = randInt() % 2;\n    const vel = -1 + rand() * 2;\n\n    const w1 = rand();\n    const w2 = rand();\n    const w3 = rand();\n    const w4 = rand();\n\n    const sum = w1 + w2 + w3 + w4;\n\n    myInfo[i] = {\n      weights: [w1 / sum, w2 / sum, w3 / sum, w4 / sum],\n      props: [blooms, reflect, vel, 0],\n    };\n  }\n\n  return myInfo as RuinsInfo;\n}\n\nexport function getPlanetCosmetic(planet: Planet | undefined): PlanetCosmeticInfo {\n  if (!planet) return grayColors;\n  if (cosmeticByLocId.has(planet.locationId)) {\n    return cosmeticByLocId.get(planet.locationId) || grayColors;\n  }\n\n  // biome-defined\n  const baseColor = isLocatable(planet) ? baseByBiome[planet.biome] : ([0, 0, 50] as HSLVec);\n  const oceanColor = isLocatable(planet) ? oceanByBiome[planet.biome] : ([0, 0, 20] as HSLVec);\n\n  const baseHue = hashToHue(planet.locationId);\n  const seed = parseInt('0x' + planet.locationId.substring(0, 9));\n\n  const bL = Math.min(baseColor[2] + 20, 92);\n  const baseColor2 = [baseColor[0], baseColor[1], bL - 10] as HSLVec;\n  const baseColor3 = [baseColor[0], baseColor[1], bL] as HSLVec;\n\n  const sL = Math.max(0, baseColor[2] - 30);\n  const sS = baseColor[1] - 10;\n  const secondaryColor = [baseColor[0], sS, sL] as HSLVec;\n  const secondaryColor2 = [baseColor[0], sS, sL + 10] as HSLVec;\n  const secondaryColor3 = [baseColor[0], sS, sL + 20] as HSLVec;\n\n  const beachColor = [\n    baseColor[0] + 10,\n    baseColor[1] - 30,\n    Math.min(baseColor[2] + 23, 100),\n  ] as HSLVec;\n\n  const asteroidHsl = (\n    isLocatable(planet) && planet.biome === Biome.WASTELAND ? [0, 0, 40] : baseColor\n  ) as HSLVec;\n\n  /* calculate spacetime rip colors */\n  const spacetime1: HSLVec = [baseHue, 75, 70];\n  const spacetime2: HSLVec = [baseHue + 15, 70, 55];\n  const spacetime3: HSLVec = [baseHue - 15, 65, 60];\n\n  const colors: PlanetCosmeticInfo = {\n    baseStr: hslStr(...baseColor),\n    bgStr: hslStr(oceanColor[0], Math.min(oceanColor[1] + 30, 100), 80),\n\n    baseHue,\n    baseColor: hslToRgb(baseColor),\n    baseColor2: hslToRgb(baseColor2),\n    baseColor3: hslToRgb(baseColor3),\n    mtnColor: hslToRgb(secondaryColor),\n    mtnColor2: hslToRgb(secondaryColor2),\n    mtnColor3: hslToRgb(secondaryColor3),\n    backgroundColor: hslToRgb(oceanColor),\n    previewColor: hslToRgb(baseColor),\n\n    landRgb: hslToRgb(baseColor),\n    oceanRgb: hslToRgb(oceanColor),\n    beachRgb: hslToRgb(beachColor),\n\n    spacetime1: hslToRgb(spacetime1),\n    spacetime2: hslToRgb(spacetime2),\n    spacetime3: hslToRgb(spacetime3),\n\n    asteroidHsl,\n\n    seed,\n\n    hatType: hatTypeFromHash(planet.locationId),\n\n    ruins: getRuinsInfo(planet.locationId),\n  };\n\n  cosmeticByLocId.set(planet.locationId, colors);\n\n  return colors;\n}\n\nexport function getPlanetTitle(planet: Planet | undefined) {\n  if (!planet) return 'Unknown';\n\n  const myRank = getPlanetRank(planet);\n\n  let ret = 'Planet';\n\n  if (myRank === 1) {\n    ret = 'Settlement';\n  } else if (myRank === 2) {\n    ret = 'Colony';\n  } else if (myRank === 3) {\n    ret = 'Spaceport';\n  } else if (myRank === 4) {\n    ret = 'Stronghold';\n  } else if (myRank === 5) {\n    ret = 'Galactic Stronghold';\n  }\n\n  return ret;\n}\n\nexport function getPlanetName(planet: Planet | undefined): string {\n  if (!planet) return 'Unknown';\n  return getPlanetNameHash(planet.locationId);\n}\n\nexport function getConfigName(config: string):  string {\n  const name = configsById.get(config);\n  if (name) return name;\n\n  let planetName = '';\n\n  const rand = configRandom(config)\n  const randInt = () => Math.floor(rand() * 2 ** 24);\n\n  if (randInt() % 1024 === 0) {\n    planetName = 'Clown Town';\n  } else {\n    const word1 = planetNameWords[randInt() % planetNameWords.length];\n    const word2 = planetNameWords[randInt() % planetNameWords.length];\n    planetName = titleCase(`${word1} ${word2}`);\n  }\n\n  configsById.set(config, planetName);\n\n  return planetName;\n}\n\nexport function getPlanetNameHash(locId: LocationId): string {\n  const name = namesById.get(locId);\n  if (name) return name;\n\n  let planetName = '';\n\n  const randInt = planetRandomInt(locId);\n  if (randInt() % 1024 === 0) {\n    planetName = 'Clown Town';\n  } else {\n    const word1 = planetNameWords[randInt() % planetNameWords.length];\n    const word2 = planetNameWords[randInt() % planetNameWords.length];\n    planetName = titleCase(`${word1} ${word2}`);\n  }\n\n  namesById.set(locId, planetName);\n\n  return planetName;\n}\n\nexport function getPlanetTagline(planet: Planet | undefined): string {\n  if (!planet) return 'The empty unknown';\n\n  const tagline = taglinesById.get(planet.locationId);\n  if (tagline) return tagline;\n\n  let myTagline = '';\n\n  if (getPlanetName(planet) === 'Clown Town') {\n    myTagline = `A town of clowns`;\n  } else {\n    const randInt = planetRandomInt(planet.locationId);\n    const adj1 = planetTagAdj[randInt() % planetTagAdj.length];\n    const adj2 = planetTagAdj[randInt() % planetTagAdj.length];\n    const noun = planetTagNoun[randInt() % planetTagNoun.length];\n    myTagline = `A ${adj1}, ${adj2} ${noun}`;\n  }\n  taglinesById.set(planet.locationId, myTagline);\n\n  return myTagline;\n}\n\n// this one doesn't mention the name\nexport function getPlanetBlurb(planet: Planet | undefined): string {\n  if (!planet)\n    return 'The vast, empty unknown of space contains worlds of infinite possibilities. Select a planet to learn more...';\n\n  const myBlurb = blurbsById.get(planet.locationId);\n  if (myBlurb) return myBlurb;\n\n  let append = '';\n  if (getPlanetName(planet) === 'Clown Town') {\n    append = `Founded in 1998 by Brian Gu, who remains the CEO of Clown Town to this day. `;\n  }\n\n  tracery.setRng(planetRandom(planet.locationId));\n  const myGrammar = {\n    // geography, atmosphere, fauna, flora, fun fact\n    story: [\n      `#geography.capitalize# #populates#. ` +\n        `The #air# is #descair#. ` +\n        `#myflora.capitalize# #bloom# #colors#. ` +\n        `#many.capitalize# species of #species# #populate# the #habitat#. ` +\n        `#funfact.capitalize#\\.`,\n    ],\n    origin: ['#[myflora:#flora#]story#'],\n  };\n  const grammar = tracery.createGrammar({ ...blurbGrammar, ...myGrammar });\n\n  grammar.addModifiers(baseEngModifiers);\n\n  const blurb = append + grammar.flatten('#origin#');\n  blurbsById.set(planet.locationId, blurb);\n  return blurb;\n}\n\n// this one mentions the name\nexport function getPlanetBlurb2(planet: Planet | undefined): string {\n  if (!planet) return '';\n\n  const myBlurb = blurbs2ById.get(planet.locationId);\n  if (myBlurb) return myBlurb;\n\n  const name = getPlanetName(planet);\n  const tagline = getPlanetTagline(planet);\n  const myGrammar = {\n    story: [\n      `The people of ${name} have #learned# to #live# in a ${tagline}. ${name}'s #mysun# #sends# an #flock# of #bads# #sometimes#. Over the #years#, they've #removed# the #mysun# by #throwing# #warbears#. In doing so, they've learned that #lesson#\\.`,\n    ],\n    origin: [`#[mysun:#sun#]story#`],\n  };\n  tracery.setRng(planetRandom(planet.locationId));\n  const grammar = tracery.createGrammar({ ...blurb2grammar, ...myGrammar });\n\n  grammar.addModifiers(baseEngModifiers);\n  const blurb = grammar.flatten('#origin#');\n\n  blurbs2ById.set(planet.locationId, blurb);\n  return blurb;\n}\n\nexport function getHatSizeName(planet: Planet) {\n  const maxHat = HAT_SIZES.length;\n  const lv = planet.hatLevel;\n\n  if (lv < maxHat) return HAT_SIZES[lv];\n  else return 'H' + 'A'.repeat(4 * 2 ** (lv - maxHat + 1)) + 'T';\n}\n"]}