{"version":3,"file":"DFWhitelistFacet__factory.js","sourceRoot":"","sources":["DFWhitelistFacet__factory.ts"],"names":[],"mappings":"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","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  DFWhitelistFacet,\n  DFWhitelistFacetInterface,\n} from \"../DFWhitelistFacet\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"hashes\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"addKeys\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"toAdd\",\n        type: \"address\",\n      },\n    ],\n    name: \"addToWhitelist\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"keyHash\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"adminUseKey\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"allowListEnabled\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"addresses\",\n        type: \"address[]\",\n      },\n    ],\n    name: \"bulkAddToWhitelist\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newDrip\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"changeDrip\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newReward\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"changeRelayerReward\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"keys\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"disableKeys\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"drip\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getNAllowed\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"hashed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"isKeyHashValid\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"isWhitelisted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"relayerReward\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"toRemove\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeFromWhitelist\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"newRewardsEnabled\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setRelayerRewardsEnabled\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256[2]\",\n        name: \"_a\",\n        type: \"uint256[2]\",\n      },\n      {\n        internalType: \"uint256[2][2]\",\n        name: \"_b\",\n        type: \"uint256[2][2]\",\n      },\n      {\n        internalType: \"uint256[2]\",\n        name: \"_c\",\n        type: \"uint256[2]\",\n      },\n      {\n        internalType: \"uint256[2]\",\n        name: \"_input\",\n        type: \"uint256[2]\",\n      },\n    ],\n    name: \"useKey\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50611261806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636f3f80c9116100975780639f678cca116100665780639f678cca14610260578063c175559b14610287578063cb2d392d146102ae578063e43252d7146102c157600080fd5b80636f3f80c9146102145780637adb2677146102275780638ab1d6811461023a5780638d82b0a41461024d57600080fd5b80633af32abf116100d35780633af32abf146101aa5780633f1e4244146101bd5780636c79af10146101ee5780636ea157271461020157600080fd5b806320de15541461010557806322bd5c1c1461011a578063265656de1461015557806332ad9ecd14610168575b600080fd5b610118610113366004610d89565b6102d4565b005b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba5460ff165b60405190151581526020015b60405180910390f35b610118610163366004610e4d565b6102ea565b610140610176366004610ee3565b60009081527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ec1602052604090205460ff1690565b6101406101b8366004610efc565b610380565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ec0545b60405190815260200161014c565b6101186101fc366004610f20565b6103f1565b61011861020f366004610ee3565b610439565b610118610222366004610fff565b610465565b610118610235366004610e4d565b61063e565b610118610248366004610efc565b6106cc565b61011861025b366004610ee3565b610978565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebb546101e0565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebe546101e0565b6101186102bc3660046110ad565b6109a4565b6101186102cf366004610efc565b6109de565b6102dc610b1f565b6102e68282610bc3565b5050565b6102f2610b1f565b60005b81518161ffff1610156102e65760017f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba6007016000848461ffff1681518110610340576103406110ca565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610378906110f6565b9150506102f5565b60007f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba5460ff166103b357506001919050565b506001600160a01b031660009081527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc602052604090205460ff1690565b6103f9610b1f565b60005b81518110156102e65761042782828151811061041a5761041a6110ca565b60200260200101516109de565b8061043181611118565b9150506103fc565b610441610b1f565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ec055565b6040517f3f1884bf00000000000000000000000000000000000000000000000000000000815273__$6b78ae7bf09e0e72535be6401663f3a543$__90633f1884bf906104bb908790879087908790600401611156565b602060405180830381865af41580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906111e1565b61054d5760405162461bcd60e51b815260206004820152601c60248201527f4661696c65642077686974656c6973742070726f6f6620636865636b0000000060448201526064015b60405180910390fd5b80516020808301516001600160a01b03811660009081527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc90925260409091205460ff161561059d575050610638565b6105a78282610bc3565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebf5460ff1680156105e157506001600160a01b0381163314155b15610635577f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ec054604051339180156108fc02916000818181858888f19350505050158015610633573d6000803e3d6000fd5b505b50505b50505050565b610646610b1f565b60005b81518110156102e65760007f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba600701600084848151811061068c5761068c6110ca565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806106c490611118565b915050610649565b6106d4610b1f565b6001600160a01b03811660009081527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc602052604090205460ff166107815760405162461bcd60e51b815260206004820152602860248201527f706c6179657220776173206e6f742077686974656c697374656420746f20626560448201527f67696e20776974680000000000000000000000000000000000000000000000006064820152608401610544565b6001600160a01b03811660009081527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc60205260408120805460ff191690555b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebe548110156102e6576001600160a01b0382167f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba6004018281548110610829576108296110ca565b6000918252602090912001546001600160a01b03161415610966577f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebe8054610873906001906111fe565b81548110610883576108836110ca565b6000918252602090912001546001600160a01b03167f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba60040182815481106108cd576108cd6110ca565b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03929092169190911790557f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660eba60040180548061093657610936611215565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff191690550190555b8061097081611118565b9150506107c1565b610980610b1f565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebb55565b6109ac610b1f565b7f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebf805460ff1916911515919091179055565b6109e6610b1f565b6001600160a01b03811660009081527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc602052604090205460ff1615610a6e5760405162461bcd60e51b815260206004820152601960248201527f706c6179657220697320616c726561647920616c6c6f776564000000000000006044820152606401610544565b6001600160a01b031660008181527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc60205260408120805460ff191660019081179091557f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebe805491820181559091527f5e72494f33acda3b447e70564712b5967fd59517b202c03dba44af74a08983a101805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b03163314610bc15760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201527f65720000000000000000000000000000000000000000000000000000000000006064820152608401610544565b565b60008281527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ec1602052604090205460ff16610c405760405162461bcd60e51b815260206004820152600b60248201527f696e76616c6964206b65790000000000000000000000000000000000000000006044820152606401610544565b6001600160a01b03811660008181527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebc602090815260408083208054600160ff1991821681179092557f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebe805492830190557f5e72494f33acda3b447e70564712b5967fd59517b202c03dba44af74a08983a1909101805473ffffffffffffffffffffffffffffffffffffffff1916861790558684527f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ec190925280832080549092169091557f69a2c502475bdd85d96bf3a0299d27e0c75b294faa4041a1d71dc144ef660ebb5490516108fc82150292818181858888f19350505050158015610d6c573d6000803e3d6000fd5b505050565b6001600160a01b0381168114610d8657600080fd5b50565b60008060408385031215610d9c57600080fd5b823591506020830135610dae81610d71565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610df257610df2610db9565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e2157610e21610db9565b604052919050565b600067ffffffffffffffff821115610e4357610e43610db9565b5060051b60200190565b60006020808385031215610e6057600080fd5b823567ffffffffffffffff811115610e7757600080fd5b8301601f81018513610e8857600080fd5b8035610e9b610e9682610e29565b610df8565b81815260059190911b82018301908381019087831115610eba57600080fd5b928401925b82841015610ed857833582529284019290840190610ebf565b979650505050505050565b600060208284031215610ef557600080fd5b5035919050565b600060208284031215610f0e57600080fd5b8135610f1981610d71565b9392505050565b60006020808385031215610f3357600080fd5b823567ffffffffffffffff811115610f4a57600080fd5b8301601f81018513610f5b57600080fd5b8035610f69610e9682610e29565b81815260059190911b82018301908381019087831115610f8857600080fd5b928401925b82841015610ed8578335610fa081610d71565b82529284019290840190610f8d565b600082601f830112610fc057600080fd5b610fc8610dcf565b806040840185811115610fda57600080fd5b845b81811015610ff4578035845260209384019301610fdc565b509095945050505050565b600080600080610140858703121561101657600080fd5b6110208686610faf565b9350604086605f87011261103357600080fd5b61103b610dcf565b8060c088018981111561104d57600080fd5b8389015b81811015611072576110638b82610faf565b84526020909301928401611051565b508196506110808a82610faf565b955050505050611094866101008701610faf565b905092959194509250565b8015158114610d8657600080fd5b6000602082840312156110bf57600080fd5b8135610f198161109f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168181141561110e5761110e6110e0565b6001019392505050565b600060001982141561112c5761112c6110e0565b5060010190565b8060005b6002811015610638578151845260209384019390910190600101611137565b61014081016111658287611133565b6040808301866000805b600280821061117e57506111b8565b835185845b838110156111a1578251825260209283019290910190600101611183565b50505093850193506020929092019160010161116f565b50505050506111ca60c0830185611133565b6111d8610100830184611133565b95945050505050565b6000602082840312156111f357600080fd5b8151610f198161109f565b600082821015611210576112106110e0565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220154df74df19006ab58de5f938775a15ebf8632653a91ddcc29d62bc44ffc730564736f6c634300080a0033\";\n\nexport class DFWhitelistFacet__factory extends ContractFactory {\n  constructor(\n    linkLibraryAddresses: DFWhitelistFacetLibraryAddresses,\n    signer?: Signer\n  ) {\n    super(\n      _abi,\n      DFWhitelistFacet__factory.linkBytecode(linkLibraryAddresses),\n      signer\n    );\n  }\n\n  static linkBytecode(\n    linkLibraryAddresses: DFWhitelistFacetLibraryAddresses\n  ): string {\n    let linkedBytecode = _bytecode;\n\n    linkedBytecode = linkedBytecode.replace(\n      new RegExp(\"__\\\\$6b78ae7bf09e0e72535be6401663f3a543\\\\$__\", \"g\"),\n      linkLibraryAddresses[\"contracts/Verifier.sol:Verifier\"]\n        .replace(/^0x/, \"\")\n        .toLowerCase()\n    );\n\n    return linkedBytecode;\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<DFWhitelistFacet> {\n    return super.deploy(overrides || {}) as Promise<DFWhitelistFacet>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): DFWhitelistFacet {\n    return super.attach(address) as DFWhitelistFacet;\n  }\n  connect(signer: Signer): DFWhitelistFacet__factory {\n    return super.connect(signer) as DFWhitelistFacet__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): DFWhitelistFacetInterface {\n    return new utils.Interface(_abi) as DFWhitelistFacetInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): DFWhitelistFacet {\n    return new Contract(address, _abi, signerOrProvider) as DFWhitelistFacet;\n  }\n}\n\nexport interface DFWhitelistFacetLibraryAddresses {\n  [\"contracts/Verifier.sol:Verifier\"]: string;\n}\n"]}