{"version":3,"file":"LibDiamond__factory.js","sourceRoot":"","sources":["LibDiamond__factory.ts"],"names":[],"mappings":";AAAA,+CAA+C;AAC/C,oBAAoB;AACpB,oBAAoB;;;AAEpB,mCAA6E;AAI7E,MAAM,IAAI,GAAG;IACX;QACE,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE;YACN;gBACE,UAAU,EAAE;oBACV;wBACE,YAAY,EAAE,SAAS;wBACvB,IAAI,EAAE,cAAc;wBACpB,IAAI,EAAE,SAAS;qBAChB;oBACD;wBACE,YAAY,EAAE,iCAAiC;wBAC/C,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,OAAO;qBACd;oBACD;wBACE,YAAY,EAAE,UAAU;wBACxB,IAAI,EAAE,mBAAmB;wBACzB,IAAI,EAAE,UAAU;qBACjB;iBACF;gBACD,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,+BAA+B;gBAC7C,IAAI,EAAE,aAAa;gBACnB,IAAI,EAAE,SAAS;aAChB;YACD;gBACE,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,SAAS;gBACvB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,SAAS;aAChB;YACD;gBACE,OAAO,EAAE,KAAK;gBACd,YAAY,EAAE,OAAO;gBACrB,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,OAAO;aACd;SACF;QACD,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,OAAO;KACd;IACD;QACE,SAAS,EAAE,KAAK;QAChB,MAAM,EAAE;YACN;gBACE,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,SAAS;gBACvB,IAAI,EAAE,eAAe;gBACrB,IAAI,EAAE,SAAS;aAChB;YACD;gBACE,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,SAAS;gBACvB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,SAAS;aAChB;SACF;QACD,IAAI,EAAE,sBAAsB;QAC5B,IAAI,EAAE,OAAO;KACd;CACF,CAAC;AAEF,MAAM,SAAS,GACb,8RAA8R,CAAC;AAEjS,MAAa,mBAAoB,SAAQ,wBAAe;IACtD,YAAY,MAAe;QACzB,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,CACJ,SAA2D;QAE3D,OAAO,KAAK,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,CAAwB,CAAC;IAC9D,CAAC;IACD,oBAAoB,CAClB,SAA2D;QAE3D,OAAO,KAAK,CAAC,oBAAoB,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC;IACD,MAAM,CAAC,OAAe;QACpB,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,CAAe,CAAC;IAC7C,CAAC;IACD,OAAO,CAAC,MAAc;QACpB,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAwB,CAAC;IACtD,CAAC;IAGD,MAAM,CAAC,eAAe;QACpB,OAAO,IAAI,cAAK,CAAC,SAAS,CAAC,IAAI,CAAwB,CAAC;IAC1D,CAAC;IACD,MAAM,CAAC,OAAO,CACZ,OAAe,EACf,gBAAmC;QAEnC,OAAO,IAAI,iBAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,gBAAgB,CAAe,CAAC;IACrE,CAAC;;AA/BH,kDAgCC;AAXiB,4BAAQ,GAAG,SAAS,CAAC;AACrB,uBAAG,GAAG,IAAI,CAAC","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { LibDiamond, LibDiamondInterface } from \"../LibDiamond\";\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"facetAddress\",\n            type: \"address\",\n          },\n          {\n            internalType: \"enum IDiamondCut.FacetCutAction\",\n            name: \"action\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bytes4[]\",\n            name: \"functionSelectors\",\n            type: \"bytes4[]\",\n          },\n        ],\n        indexed: false,\n        internalType: \"struct IDiamondCut.FacetCut[]\",\n        name: \"_diamondCut\",\n        type: \"tuple[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"_init\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"_calldata\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"DiamondCut\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n];\n\nconst _bytecode =\n  \"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206ea7cdc81655d524f2b387ed2e8c33337b910b6e242171f6120c132c39c7424c64736f6c634300080a0033\";\n\nexport class LibDiamond__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<LibDiamond> {\n    return super.deploy(overrides || {}) as Promise<LibDiamond>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): LibDiamond {\n    return super.attach(address) as LibDiamond;\n  }\n  connect(signer: Signer): LibDiamond__factory {\n    return super.connect(signer) as LibDiamond__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): LibDiamondInterface {\n    return new utils.Interface(_abi) as LibDiamondInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LibDiamond {\n    return new Contract(address, _abi, signerOrProvider) as LibDiamond;\n  }\n}\n"]}