/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC721Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Base__factory>;
    getContractFactory(
      name: "ERC721BaseInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BaseInternal__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Internal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Internal__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Metadata__factory>;
    getContractFactory(
      name: "ERC721MetadataInternal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MetadataInternal__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "DFArenaCoreFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFArenaCoreFacet__factory>;
    getContractFactory(
      name: "DFArenaFaucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFArenaFaucet__factory>;
    getContractFactory(
      name: "DFArenaGetterFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFArenaGetterFacet__factory>;
    getContractFactory(
      name: "DFArenaTournamentFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFArenaTournamentFacet__factory>;
    getContractFactory(
      name: "DFSpaceshipConfigFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFSpaceshipConfigFacet__factory>;
    getContractFactory(
      name: "DFArenaInitialize",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFArenaInitialize__factory>;
    getContractFactory(
      name: "DFInitialize",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFInitialize__factory>;
    getContractFactory(
      name: "DFAdminFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFAdminFacet__factory>;
    getContractFactory(
      name: "DFArtifactFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFArtifactFacet__factory>;
    getContractFactory(
      name: "DFCaptureFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFCaptureFacet__factory>;
    getContractFactory(
      name: "DFCoreFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFCoreFacet__factory>;
    getContractFactory(
      name: "DFDebugFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFDebugFacet__factory>;
    getContractFactory(
      name: "DFGetterFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFGetterFacet__factory>;
    getContractFactory(
      name: "DFMoveFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFMoveFacet__factory>;
    getContractFactory(
      name: "DFStartFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFStartFacet__factory>;
    getContractFactory(
      name: "DFWhitelistFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DFWhitelistFacet__factory>;
    getContractFactory(
      name: "LibArtifactUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibArtifactUtils__factory>;
    getContractFactory(
      name: "LibGameUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibGameUtils__factory>;
    getContractFactory(
      name: "LibLazyUpdate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibLazyUpdate__factory>;
    getContractFactory(
      name: "LibPlanet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibPlanet__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "Verifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Verifier__factory>;
    getContractFactory(
      name: "DarkForest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DarkForest__factory>;

    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC721Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Base>;
    getContractAt(
      name: "ERC721BaseInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BaseInternal>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Internal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Internal>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Metadata>;
    getContractAt(
      name: "ERC721MetadataInternal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MetadataInternal>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "DFArenaCoreFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFArenaCoreFacet>;
    getContractAt(
      name: "DFArenaFaucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFArenaFaucet>;
    getContractAt(
      name: "DFArenaGetterFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFArenaGetterFacet>;
    getContractAt(
      name: "DFArenaTournamentFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFArenaTournamentFacet>;
    getContractAt(
      name: "DFSpaceshipConfigFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFSpaceshipConfigFacet>;
    getContractAt(
      name: "DFArenaInitialize",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFArenaInitialize>;
    getContractAt(
      name: "DFInitialize",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFInitialize>;
    getContractAt(
      name: "DFAdminFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFAdminFacet>;
    getContractAt(
      name: "DFArtifactFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFArtifactFacet>;
    getContractAt(
      name: "DFCaptureFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFCaptureFacet>;
    getContractAt(
      name: "DFCoreFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFCoreFacet>;
    getContractAt(
      name: "DFDebugFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFDebugFacet>;
    getContractAt(
      name: "DFGetterFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFGetterFacet>;
    getContractAt(
      name: "DFMoveFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFMoveFacet>;
    getContractAt(
      name: "DFStartFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFStartFacet>;
    getContractAt(
      name: "DFWhitelistFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DFWhitelistFacet>;
    getContractAt(
      name: "LibArtifactUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibArtifactUtils>;
    getContractAt(
      name: "LibGameUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibGameUtils>;
    getContractAt(
      name: "LibLazyUpdate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibLazyUpdate>;
    getContractAt(
      name: "LibPlanet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibPlanet>;
    getContractAt(
      name: "Diamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "Verifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Verifier>;
    getContractAt(
      name: "DarkForest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DarkForest>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
